#Основной курс изучения
1) Что такое Python? Как начать программировать?
2) Переменные. Типы данных. Операторы сравнения.
3.1) Условный оператор.
4.1) Цикл While. Break & Continue.
5.1) Списки(массивы).
6.1) Цикл For. Range.
7.1) Процедуры и функции. Lambda function. *args
8.1) Словари.
9) Import. Разделение кода на файлы.
10) Правила хорошего кода.
11.1) Работа с файлами.
12.1) CSV-файлы.
|==============================|
|        12 занятий из 26      |
|==============================|
#Дубликаты(повторение) занятий + Практика
3.2) Задачи:
        • Пользователь вводит два целых числа. Выведите меньшее из них.

        • Пользователь вводит свое имя и возраст. Если возраст пользователя больше 18, то вывести строку "Добрый вечер, name!
          Вы совершеннолетний, поздравляем!", иначе вывести строку "Привет, name! Приносим извинения, но вы не можете гулять после 22:00"

        • Пользователь вводит целое число. Проверьте является ли это число четырехзначным, если является, то выведите строку "Успешно", иначе "Неудача".

        • Пользователь вводит целое число - номер месяца своего рождения. Выведите строку "Вы родились летом", если
          номер месяц совпадает с номером одного из летних месяцев. Если номер месяца совпал с номером одного из зимних
          месяцев, то нужно вывести "К холодам вам не привыкать". Для людей, которые празднуют свой день рождения осенью
          выведите "Я тоже люблю осенний листопад". Если весна ваше время года выведите строку "Подснежник". В случае,
          если введенное число меньше единицы или больше 12, выведите строку "Ошибка".

        • Пользователь вводит номер года своего рождения. Если этот год является високосным выведите "Вы случайно родились не 29 февраля?",
          иначе выведите "Ничего необычного". Для справки, в високосном году 366 дней, а в обычном - 365. Номер високосного
          года, делится на 4, за исключением номеров тех годов, которые делятся на 100 и не делятся на 400 (например,
          годы 300, 1300 и 1900 не являются високосными, а 1200 и 2000 - являются).

        • Треугольник существует только тогда, когда сумма любых двух его сторон больше третьей. Дано a, b, c - стороны
          предполагаемого треугольника. Требуется сравнить длину каждого отрезка-стороны с суммой двух других. Если хотя
          бы в одном случае отрезок окажется больше суммы двух других, то треугольника с такими сторонами не существует.

        • В чем разница между двумя нижеследующими конструкциями? Приведите примеры, когда правильнее использовать первый
          вариант инструкции (данные замените на свои), а когда второй.
            Первая конструкция:
            if x % 5 == 0:
            ____print('Х делится на 5')
            if x % 2 == 0:
            ____print('Х – четное число')

            Вторая конструкция:
            if x % 2 == 0:
            ____print('Х – четное число')
            elif x % 5 == 0:
            ____print('Х делится на 5')

4.2) Задачи:
        • Пользователь вводит числа A и B (A > B). Выведите четные числа от A до B включительно.

        • Пользователь вводит числа до тех пор, пока не введет 0. Выведите сумму введенных чисел (0 считать не нужно).

        • Пользователь вводит числа до тех пор, пока не введет 0. Выведите максимальное введенное число (0 считать не нужно).

        • Пользователь вводит числа до тех пор, пока не введет 0. Выведите минимальное введенное число (0 считать не нужно).

5.2) Задачи:
        • Создайте список из 10 четных чисел и выведите его с помощью цикла while.

        • Создайте пустой список и добавьте в него 10 случайных чисел и выведите их. В данной задаче нужно использовать функцию randint.
            from random import randint
            n = randint(1, 10)

        • Даны два списка, удалите все элементы первого списка из второго.
            a = [1, 3, 4, 5]
            b = [4, 5, 6, 7]
            # Вывод
            >>> [6, 7]

        • Создайте список из случайных чисел. Найдите максимальное количество его одинаковых элементов.

        • Создайте список из случайных чисел и найдите наибольший элемент в нем.*

        • Найдите наименьший элемент в списке из задания с *

        • Найдите сумму элементов списка из задания с *

        • Найдите среднее арифметическое элементов списка из задания с *

6.2) Задачи:
        • Пользователь вводит число N. Выведите все числа от 0 до N включительно.

        • Пользователь вводит числа K и N. Выведите все числа от K до N включительно.

        • Пользователь вводит числа K и N. Выведите сумму чисел от K до N включительно.

        • Пользователь вводит числа K и N. Выведите сумму только четных чисел от K до N включительно.

        • Евгению предоставили строку, состоящую из русских букв разных регистров, и попросили очистить ее от заглавных литер.
          Как ему показалось, он написал верный код, но результат совсем не порадовал.
          Ниже представлен пример работы «чистильщика строк», которому срочно требуется ваша помощь.
            letters = 'ЫгВЫоЯСремДШНККАыкЩЙФа'

            for letter in letters:
            ____if letter.upper() = letters:
            ________letters.replace(letter, '')

            print(letters)

7.2) Задачи:
        • Напишите функцию sum_range(start, end), которая суммирует все целые числа от значения «start» до величины «end» включительно.
          Если пользователь задаст первое число большее чем второе, просто поменяйте их местами.

        • Напишите функцию, которая получает в качестве аргумента радиус круга и находит его площадь.

        • Напишите функцию, которая возвращает максимальный элемент из переданного в нее списка.

        • Напишите функцию, которая возвращает список с уникальными (неповторяющихся) элементам.

8.2) Задачи:
        • В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность. В случае с английским алфавитом очки распределяются так:

			A, E, I, O, U, L, N, S, T, R – 1 очко;
			D, G – 2 очка;
			B, C, M, P – 3 очка;
			F, H, V, W, Y – 4 очка;
			K – 5 очков;
			J, X – 8 очков;
			Q, Z – 10 очков.

		  А русские буквы оцениваются так:

			А, В, Е, И, Н, О, Р, С, Т – 1 очко;
			Д, К, Л, М, П, У – 2 очка;
			Б, Г, Ё, Ь, Я – 3 очка;
			Й, Ы – 4 очка;
			Ж, З, Х, Ц, Ч – 5 очков;
			Ш, Э, Ю – 8 очков;
			Ф, Щ, Ъ – 10 очков.

		  Напишите программу, которая вычисляет стоимость введенного пользователем слова. Будем считать, что на вход подается только
		  одно слово, которое содержит либо только английские, либо только русские буквы.
		  
		• Создать большой словарь в котором будут различные товары их описание, цена и категория. Сделать в консоли меню и в зависимости от выбранного
		  пункта от пользователя выводить соответствующие товары.
		  
11.2) Задачи:
		• Имеется текстовый файл prices.txt с информацией о заказе из интернет магазина. В нем каждая строка с помощью символа табуляции \t
		  разделена на три колонки:

			наименование товара;
			количество товара (целое число);
			цена (в рублях) товара за 1 шт. (целое число).

		  Напишите программу, подсчитывающую общую стоимость заказа.


|==============================|
|        19 занятий из 26      |
|==============================|

+ 4 занятия на курсовую работу


|==============================|
|        23 занятий из 26      |
|==============================|

+ 3 занятия на Групповую работу
Тема: 	Система оказания банковских услуг.
Детали:	Должна быть реализована система авторизации и регистрации пользователей. Информация необходимая для регистации пользоваеля: Имя, Фамилия, Отчество(при наличии),
	Серия и Номер паспорта, Дата рождения, Логин, и Пароль. У каждого пользователя при регистрации сразу создаётся лицевой счёт (Пример: S-138402573) зная который
	можно получить баланс, номер, дату обслуживания и CVC код дебютовый карты, и если пользователь захочет то, и кредитной карты. Сделать систему выдачи
	кредитов при наличии кредитной карты, при её отсутствии заводить её. Реализовать возможность удаления пользователей при отсутствии задолжностей.